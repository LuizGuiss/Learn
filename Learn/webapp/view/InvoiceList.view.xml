<mvc:View
  controllerName="sap.ui.demo.walkthrough.controller.InvoiceList"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc">
  <List
    id="invoiceList" 
    class="sapUiResponsiveMargin"
    width="auto"
    items="{
      path: 'invoice>/Invoices',
      sorter: {
        path: 'ShipperName',
        group: true
      }
    }" > 
    <!-- O items acima, agrupa os produtos pela empresa remetente -->
     

    <headerToolbar>
      <Toolbar>
        <Title text="{i18n>invoiceListTitle}"/>
        <ToolbarSpacer/>
        <SearchField width="50%" search=".onFilterInvoices" />
      </Toolbar>
    </headerToolbar>

    <items>
    <!-- 
      ObjectListItem cria um controle para cada filho agregado dos items,
      title é relacionado com as propriedades de um único invoice

      number e numberUnit são usados para adicionar o preço
      parts: múltiplas propriedades de diferentes modelos num único propriedade de controle
      showMeasure: false -> this hides the currency code in the property number

      numberState: A model binding inside an expression binding 
      has to be escaped with the $ sign
     -->
      <ObjectListItem 
        title="{invoice>Quantity} x {invoice>ProductName}"
        number="{
          parts: [{path: 'invoice>ExtendedPrice'}, {path: 'view>/currency'}],
          type: 'sap.ui.model.type.Currency',
          formatOptions: {
            showMeasure: false
          }
        }"
        numberUnit="{view>/currency}"
        numberState="{= ${invoice>ExtendedPrice} > 50 ? 'Error': 'Success'}" >

        <!-- 
          firstStatus: add um status
          formatter: especifica o custom formatter function
          o "." no formatter significa que a função é procurada no controller da view atual 
         -->

        <firstStatus>
          <ObjectStatus text="{
            path: 'invoice>Status',
            formatter: '.formatter.statusText'
          }" 
          />
        </firstStatus>
      </ObjectListItem>
    </items>
  </List>
</mvc:View>